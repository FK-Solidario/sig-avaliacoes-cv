"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./services/api.ts":
/*!*************************!*\
  !*** ./services/api.ts ***!
  \*************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   apiService: function() { return /* binding */ apiService; }\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! axios */ \"(app-pages-browser)/./node_modules/axios/lib/axios.js\");\n/* harmony import */ var _mock_data__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./mock-data */ \"(app-pages-browser)/./services/mock-data.ts\");\n\n\nclass ApiService {\n    // Authentication\n    async login(credentials) {\n        const response = await this.api.post(\"/auth/login\", credentials);\n        return response.data;\n    }\n    async logout() {\n        try {\n            await this.api.post(\"/auth/logout\");\n        } catch (error) {\n            // Logout can fail if token is already invalid, but we should continue\n            console.warn(\"Logout API call failed:\", error);\n        }\n    }\n    // Assessment endpoints - Based on Swagger API\n    async getAvaliacoes(filters) {\n        try {\n            const response = await this.api.get(\"/avaliacoes\", {\n                params: filters\n            });\n            return response.data;\n        } catch (error) {\n            console.warn(\"API call failed, using mock data:\", error);\n            return _mock_data__WEBPACK_IMPORTED_MODULE_0__.mockAvaliacoes;\n        }\n    }\n    async getAvaliacao(id) {\n        const response = await this.api.get(\"/avaliacoes/\".concat(id));\n        return response.data;\n    }\n    async createAvaliacao(data) {\n        const response = await this.api.post(\"/avaliacoes\", data);\n        return response.data;\n    }\n    async updateAvaliacao(id, data) {\n        const response = await this.api.put(\"/avaliacoes/\".concat(id), data);\n        return response.data;\n    }\n    async deleteAvaliacao(id) {\n        await this.api.delete(\"/avaliacoes/\".concat(id));\n    }\n    async getOpcoes() {\n        try {\n            const response = await this.api.get(\"/avaliacoes/options\");\n            return response.data;\n        } catch (error) {\n            console.warn(\"API call failed, using mock options:\", error);\n            return _mock_data__WEBPACK_IMPORTED_MODULE_0__.mockOpcoes;\n        }\n    }\n    // Legacy methods for compatibility\n    async getAssessments(params) {\n        const avaliacoes = await this.getAvaliacoes(params);\n        return {\n            data: avaliacoes.map(this.mapAvaliacaoToAssessment.bind(this)),\n            page: 1,\n            per_page: avaliacoes.length,\n            total: avaliacoes.length,\n            total_pages: 1\n        };\n    }\n    async getAssessment(id) {\n        const avaliacao = await this.getAvaliacao(parseInt(id));\n        return this.mapAvaliacaoToAssessment(avaliacao);\n    }\n    async createAssessment(data) {\n        const avaliacao = await this.createAvaliacao(data);\n        return this.mapAvaliacaoToAssessment(avaliacao);\n    }\n    async updateAssessment(id, data) {\n        const updateData = {\n            nome_responsavel: data.nome_responsavel || \"\",\n            numero_documento: data.numero_documento || \"\",\n            contacto_telefonico: data.contacto_telefonico || \"\",\n            membros_agregado: data.membros_agregado || 0,\n            grupos_vulneraveis: data.grupos_vulneraveis || [],\n            endereco_completo: data.endereco_completo || \"\",\n            ponto_referencia: data.ponto_referencia || \"\",\n            latitude_gps: data.latitude_gps || 0,\n            longitude_gps: data.longitude_gps || 0,\n            tipo_estrutura: data.tipo_estrutura || \"habitacao\",\n            nivel_danos: data.nivel_danos || \"parcial\",\n            perdas: data.perdas || [],\n            outras_perdas: data.outras_perdas || \"\",\n            necessidade_urgente: data.necessidade_urgente || \"agua_potavel\",\n            outra_necessidade: data.outra_necessidade || \"\"\n        };\n        const avaliacao = await this.updateAvaliacao(parseInt(id), updateData);\n        return this.mapAvaliacaoToAssessment(avaliacao);\n    }\n    async deleteAssessment(id) {\n        await this.deleteAvaliacao(parseInt(id));\n    }\n    // Evidence endpoints - Based on Swagger API\n    async getAssessmentEvidence(assessmentId) {\n        const response = await this.api.get(\"/avaliacoes/\".concat(assessmentId, \"/evidence\"));\n        return response.data.data;\n    }\n    async uploadEvidence(assessmentId, data) {\n        const formData = new FormData();\n        formData.append(\"file\", data.file);\n        if (data.description) {\n            formData.append(\"description\", data.description);\n        }\n        const response = await this.api.post(\"/avaliacoes/\".concat(assessmentId, \"/evidence\"), formData, {\n            headers: {\n                \"Content-Type\": \"multipart/form-data\"\n            }\n        });\n        return response.data.data;\n    }\n    async deleteEvidence(assessmentId, evidenceId) {\n        await this.api.delete(\"/avaliacoes/\".concat(assessmentId, \"/evidence/\").concat(evidenceId));\n    }\n    // Statistics endpoints - Based on Swagger API\n    async getEstatisticas() {\n        try {\n            const response = await this.api.get(\"/avaliacoes/statistics\");\n            return response.data;\n        } catch (error) {\n            console.warn(\"API call failed, using mock statistics:\", error);\n            return _mock_data__WEBPACK_IMPORTED_MODULE_0__.mockEstatisticas;\n        }\n    }\n    // Legacy statistics method\n    async getStatistics() {\n        const estatisticas = await this.getEstatisticas();\n        return {\n            ...estatisticas,\n            pending_assessments: 0,\n            in_progress_assessments: 0,\n            completed_assessments: estatisticas.total_avaliacoes,\n            cancelled_assessments: 0,\n            assessments_by_type: estatisticas.estatisticas_tipo_estrutura,\n            assessments_by_severity: estatisticas.estatisticas_nivel_danos,\n            total_estimated_damage: 0,\n            total_affected_people: 0\n        };\n    }\n    // Helper method to map API data to legacy format\n    mapAvaliacaoToAssessment(avaliacao) {\n        return {\n            id: avaliacao.id,\n            title: \"Avalia\\xe7\\xe3o - \".concat(avaliacao.nome_responsavel),\n            description: \"Estrutura: \".concat(avaliacao.tipo_estrutura, \", Danos: \").concat(avaliacao.nivel_danos),\n            location: {\n                latitude: avaliacao.latitude_gps || 0,\n                longitude: avaliacao.longitude_gps || 0,\n                address: avaliacao.endereco_completo\n            },\n            disaster_type: avaliacao.tipo_estrutura,\n            severity: avaliacao.nivel_danos,\n            status: \"completed\",\n            assigned_to: null,\n            created_by: \"system\",\n            completed_at: avaliacao.data_criacao,\n            estimated_damage: null,\n            affected_people: avaliacao.membros_agregado,\n            notes: avaliacao.outras_perdas || null,\n            nome_responsavel: avaliacao.nome_responsavel,\n            contacto_telefonico: avaliacao.contacto_telefonico,\n            numero_documento: avaliacao.numero_documento,\n            membros_agregado: avaliacao.membros_agregado,\n            grupos_vulneraveis: avaliacao.grupos_vulneraveis,\n            endereco_completo: avaliacao.endereco_completo,\n            ponto_referencia: avaliacao.ponto_referencia,\n            latitude_gps: avaliacao.latitude_gps,\n            longitude_gps: avaliacao.longitude_gps,\n            tipo_estrutura: avaliacao.tipo_estrutura,\n            nivel_danos: avaliacao.nivel_danos,\n            perdas: avaliacao.perdas,\n            outras_perdas: avaliacao.outras_perdas,\n            necessidade_urgente: avaliacao.necessidade_urgente,\n            outra_necessidade: avaliacao.outra_necessidade,\n            data_criacao: avaliacao.data_criacao,\n            data_atualizacao: avaliacao.data_atualizacao\n        };\n    }\n    // Utility methods\n    setAuthToken(token) {\n        if (token) {\n            localStorage.setItem(\"auth_token\", token);\n        } else {\n            localStorage.removeItem(\"auth_token\");\n        }\n    }\n    removeAuthToken() {\n        localStorage.removeItem(\"auth_token\");\n        localStorage.removeItem(\"user\");\n    }\n    getAuthToken() {\n        return localStorage.getItem(\"auth_token\");\n    }\n    isAuthenticated() {\n        return !!this.getAuthToken();\n    }\n    constructor(){\n        this.baseURL = \"http://84.247.171.243:5000\" || 0;\n        this.api = axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].create({\n            baseURL: this.baseURL,\n            timeout: 10000,\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        });\n        // Request interceptor to add auth token\n        this.api.interceptors.request.use((config)=>{\n            const token = localStorage.getItem(\"auth_token\");\n            if (token) {\n                config.headers.Authorization = \"Bearer \".concat(token);\n            }\n            return config;\n        }, (error)=>{\n            return Promise.reject(error);\n        });\n        // Response interceptor for error handling with retry logic\n        this.api.interceptors.response.use((response)=>response, async (error)=>{\n            var _error_response;\n            const originalRequest = error.config;\n            // If it's a network error or timeout, and we haven't retried yet\n            if ((error.code === \"ECONNABORTED\" || error.code === \"NETWORK_ERROR\" || !error.response) && !originalRequest._retry) {\n                originalRequest._retry = true;\n                console.warn(\"API request failed, retrying once...\", error.message);\n                try {\n                    return await this.api.request(originalRequest);\n                } catch (retryError) {\n                    console.error(\"API retry failed, falling back to mock data:\", retryError);\n                    return Promise.reject(retryError);\n                }\n            }\n            if (((_error_response = error.response) === null || _error_response === void 0 ? void 0 : _error_response.status) === 401) {\n                // Token expired or invalid\n                localStorage.removeItem(\"auth_token\");\n                localStorage.removeItem(\"user\");\n                window.location.href = \"/login\";\n            }\n            console.error(\"API Error:\", error);\n            return Promise.reject(error);\n        });\n    }\n}\nconst apiService = new ApiService();\n/* harmony default export */ __webpack_exports__[\"default\"] = (apiService);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./services/api.ts\n"));

/***/ })

});